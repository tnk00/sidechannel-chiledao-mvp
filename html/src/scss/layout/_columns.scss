@use "sass:map";
@use "sass:math";
@use '../variables' as *;
@use '../mixins' as *;


$columns: 12 !default;
$column-gap: map.get($spacers, 5) !default;
$column-gap-sm: map.get($spacers, 3) !default;


// COLUMNS
// =========================================

.columns {
  display: flex;
  flex-wrap: wrap;
  margin-right: math.div(-$column-gap, 2); 
  margin-left: math.div(-$column-gap, 2);

  &.is-gapless {
    margin-left: 0;
    margin-right: 0;

    > .column {
      padding-right: 0;
      padding-left: 0;
    }
  }

  &.has-gap-small {
    margin-right: math.div(-$column-gap-sm, 2);
    margin-left: math.div(-$column-gap-sm, 2);
    
    > .column {
      padding-right: math.div($column-gap-sm, 2);
      padding-left: math.div($column-gap-sm, 2);
    }
  }
}


.column {
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
  position: relative;
  padding-right: math.div($column-gap, 2);
  padding-left: math.div($column-gap, 2);

  &.is-narrow {
    flex: none;
  }

  //
  // Stretch to auto below their breakpoint, usage example: .is-auto .is-6-tablet
  //

  &.is-auto {
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    width: auto;
  }

  //
  // Create a column class for the total number defined in `$columns`
  //

  @for $i from 1 through $columns {
    &.is-#{$i} {
      flex: none;
      width: math.percentage(math.div($i, $columns));
    }
  }

  //
  // Create a class for each breakpoint with no media query
  // By default columns below their breakpoint will stretch to full width, usage example: .is-6-tablet
  //

  @each $breakpoint in map.keys($layout-breakpoints) {
    @for $i from 1 through $columns {
      &.is-#{$i}-#{$breakpoint} {
        flex: none;
        width: 100%;
      }
    }

    &.is-narrow-#{$breakpoint} {
      flex: none;
      width: 100%;
    }
  }


  //
  // Create a class for each breakpoint
  // Some properties needs to be overwritten from the previous breakpoint classes
  //

  @each $breakpoint in map.keys($layout-breakpoints) {
    @include breakpoint-up($breakpoint) {
      @for $i from 1 through $columns {
        &.is-#{$i}-#{$breakpoint} {
          flex: none;
          width: math.percentage(math.div($i, $columns));
        }
      }

      &.is-auto-#{$breakpoint} {
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        width: auto;
      }

      &.is-narrow-#{$breakpoint} {
        flex: none;
        width: auto;
      }
    }
  }
}